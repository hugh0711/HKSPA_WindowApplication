#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HKSPA_copy_old_data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HKSPA_dev")]
	public partial class HKSPADataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertold_album(old_album instance);
    partial void Updateold_album(old_album instance);
    partial void Deleteold_album(old_album instance);
    partial void InsertAlbumName(AlbumName instance);
    partial void UpdateAlbumName(AlbumName instance);
    partial void DeleteAlbumName(AlbumName instance);
    partial void InsertAlbum(Album instance);
    partial void UpdateAlbum(Album instance);
    partial void DeleteAlbum(Album instance);
    partial void InsertAlbumPhoto(AlbumPhoto instance);
    partial void UpdateAlbumPhoto(AlbumPhoto instance);
    partial void DeleteAlbumPhoto(AlbumPhoto instance);
    partial void InsertAlbumPhoto_info(AlbumPhoto_info instance);
    partial void UpdateAlbumPhoto_info(AlbumPhoto_info instance);
    partial void DeleteAlbumPhoto_info(AlbumPhoto_info instance);
    partial void InsertAlbumCategory(AlbumCategory instance);
    partial void UpdateAlbumCategory(AlbumCategory instance);
    partial void DeleteAlbumCategory(AlbumCategory instance);
    partial void Insertold_album_photo_record(old_album_photo_record instance);
    partial void Updateold_album_photo_record(old_album_photo_record instance);
    partial void Deleteold_album_photo_record(old_album_photo_record instance);
    #endregion
		
		public HKSPADataClassesDataContext() : 
				base(global::HKSPA_copy_old_data.Properties.Settings.Default.HKSPA_devConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HKSPADataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HKSPADataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HKSPADataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HKSPADataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<view_Category> view_Categories
		{
			get
			{
				return this.GetTable<view_Category>();
			}
		}
		
		public System.Data.Linq.Table<old_album> old_albums
		{
			get
			{
				return this.GetTable<old_album>();
			}
		}
		
		public System.Data.Linq.Table<AlbumName> AlbumNames
		{
			get
			{
				return this.GetTable<AlbumName>();
			}
		}
		
		public System.Data.Linq.Table<Album> Albums
		{
			get
			{
				return this.GetTable<Album>();
			}
		}
		
		public System.Data.Linq.Table<AlbumPhoto> AlbumPhotos
		{
			get
			{
				return this.GetTable<AlbumPhoto>();
			}
		}
		
		public System.Data.Linq.Table<AlbumPhoto_info> AlbumPhoto_infos
		{
			get
			{
				return this.GetTable<AlbumPhoto_info>();
			}
		}
		
		public System.Data.Linq.Table<AlbumCategory> AlbumCategories
		{
			get
			{
				return this.GetTable<AlbumCategory>();
			}
		}
		
		public System.Data.Linq.Table<old_album_photo_record> old_album_photo_records
		{
			get
			{
				return this.GetTable<old_album_photo_record>();
			}
		}
		
		public System.Data.Linq.Table<view_AlbumPhotoInfo> view_AlbumPhotoInfos
		{
			get
			{
				return this.GetTable<view_AlbumPhotoInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.view_Category")]
	public partial class view_Category
	{
		
		private int _CategoryID;
		
		private System.Nullable<int> _ParentID;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<bool> _Enabled;
		
		private string _Lang;
		
		private string _CategoryName;
		
		private string _Category;
		
		private string _Url;
		
		private System.Nullable<int> _FunctionID;
		
		private string _Description;
		
		public view_Category()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this._CategoryID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParentID", DbType="Int")]
		public System.Nullable<int> ParentID
		{
			get
			{
				return this._ParentID;
			}
			set
			{
				if ((this._ParentID != value))
				{
					this._ParentID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this._Enabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lang", DbType="VarChar(10)")]
		public string Lang
		{
			get
			{
				return this._Lang;
			}
			set
			{
				if ((this._Lang != value))
				{
					this._Lang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryName", DbType="NVarChar(256)")]
		public string CategoryName
		{
			get
			{
				return this._CategoryName;
			}
			set
			{
				if ((this._CategoryName != value))
				{
					this._CategoryName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="NVarChar(200)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this._Url = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FunctionID", DbType="Int")]
		public System.Nullable<int> FunctionID
		{
			get
			{
				return this._FunctionID;
			}
			set
			{
				if ((this._FunctionID != value))
				{
					this._FunctionID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.old_album")]
	public partial class old_album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _old_Album_ID;
		
		private string _old_Album_Name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onold_Album_IDChanging(int value);
    partial void Onold_Album_IDChanged();
    partial void Onold_Album_NameChanging(string value);
    partial void Onold_Album_NameChanged();
    #endregion
		
		public old_album()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_old_Album_ID", DbType="Int NOT NULL")]
		public int old_Album_ID
		{
			get
			{
				return this._old_Album_ID;
			}
			set
			{
				if ((this._old_Album_ID != value))
				{
					this.Onold_Album_IDChanging(value);
					this.SendPropertyChanging();
					this._old_Album_ID = value;
					this.SendPropertyChanged("old_Album_ID");
					this.Onold_Album_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_old_Album_Name", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string old_Album_Name
		{
			get
			{
				return this._old_Album_Name;
			}
			set
			{
				if ((this._old_Album_Name != value))
				{
					this.Onold_Album_NameChanging(value);
					this.SendPropertyChanging();
					this._old_Album_Name = value;
					this.SendPropertyChanged("old_Album_Name");
					this.Onold_Album_NameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlbumName")]
	public partial class AlbumName : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Guid _AlbumID;
		
		private string _AlbumName1;
		
		private string _Description;
		
		private string _Lang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnAlbumIDChanging(System.Guid value);
    partial void OnAlbumIDChanged();
    partial void OnAlbumName1Changing(string value);
    partial void OnAlbumName1Changed();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnLangChanging(string value);
    partial void OnLangChanged();
    #endregion
		
		public AlbumName()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="AlbumName", Storage="_AlbumName1", DbType="NVarChar(256)")]
		public string AlbumName1
		{
			get
			{
				return this._AlbumName1;
			}
			set
			{
				if ((this._AlbumName1 != value))
				{
					this.OnAlbumName1Changing(value);
					this.SendPropertyChanging();
					this._AlbumName1 = value;
					this.SendPropertyChanged("AlbumName1");
					this.OnAlbumName1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lang", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Lang
		{
			get
			{
				return this._Lang;
			}
			set
			{
				if ((this._Lang != value))
				{
					this.OnLangChanging(value);
					this.SendPropertyChanging();
					this._Lang = value;
					this.SendPropertyChanged("Lang");
					this.OnLangChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Album")]
	public partial class Album : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _AlbumID;
		
		private string _AlbumName;
		
		private string _Description;
		
		private System.Nullable<System.DateTime> _AlbumDate;
		
		private System.Nullable<int> _PhotoCount;
		
		private System.Nullable<bool> _Enabled;
		
		private string _PreviewUrl;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAlbumIDChanging(System.Guid value);
    partial void OnAlbumIDChanged();
    partial void OnAlbumNameChanging(string value);
    partial void OnAlbumNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnAlbumDateChanging(System.Nullable<System.DateTime> value);
    partial void OnAlbumDateChanged();
    partial void OnPhotoCountChanging(System.Nullable<int> value);
    partial void OnPhotoCountChanged();
    partial void OnEnabledChanging(System.Nullable<bool> value);
    partial void OnEnabledChanged();
    partial void OnPreviewUrlChanging(string value);
    partial void OnPreviewUrlChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public Album()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumName", DbType="NVarChar(256)")]
		public string AlbumName
		{
			get
			{
				return this._AlbumName;
			}
			set
			{
				if ((this._AlbumName != value))
				{
					this.OnAlbumNameChanging(value);
					this.SendPropertyChanging();
					this._AlbumName = value;
					this.SendPropertyChanged("AlbumName");
					this.OnAlbumNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumDate", DbType="Date")]
		public System.Nullable<System.DateTime> AlbumDate
		{
			get
			{
				return this._AlbumDate;
			}
			set
			{
				if ((this._AlbumDate != value))
				{
					this.OnAlbumDateChanging(value);
					this.SendPropertyChanging();
					this._AlbumDate = value;
					this.SendPropertyChanged("AlbumDate");
					this.OnAlbumDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoCount", DbType="Int")]
		public System.Nullable<int> PhotoCount
		{
			get
			{
				return this._PhotoCount;
			}
			set
			{
				if ((this._PhotoCount != value))
				{
					this.OnPhotoCountChanging(value);
					this.SendPropertyChanging();
					this._PhotoCount = value;
					this.SendPropertyChanged("PhotoCount");
					this.OnPhotoCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this.OnEnabledChanging(value);
					this.SendPropertyChanging();
					this._Enabled = value;
					this.SendPropertyChanged("Enabled");
					this.OnEnabledChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviewUrl", DbType="NVarChar(50)")]
		public string PreviewUrl
		{
			get
			{
				return this._PreviewUrl;
			}
			set
			{
				if ((this._PreviewUrl != value))
				{
					this.OnPreviewUrlChanging(value);
					this.SendPropertyChanging();
					this._PreviewUrl = value;
					this.SendPropertyChanged("PreviewUrl");
					this.OnPreviewUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(256)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlbumPhoto")]
	public partial class AlbumPhoto : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PhotoID;
		
		private System.Nullable<System.Guid> _AlbumID;
		
		private string _PhotoName;
		
		private string _Description;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoIDChanging(System.Guid value);
    partial void OnPhotoIDChanged();
    partial void OnAlbumIDChanging(System.Nullable<System.Guid> value);
    partial void OnAlbumIDChanged();
    partial void OnPhotoNameChanging(string value);
    partial void OnPhotoNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnSortOrderChanging(System.Nullable<int> value);
    partial void OnSortOrderChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDateChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public AlbumPhoto()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PhotoID
		{
			get
			{
				return this._PhotoID;
			}
			set
			{
				if ((this._PhotoID != value))
				{
					this.OnPhotoIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoID = value;
					this.SendPropertyChanged("PhotoID");
					this.OnPhotoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoName", DbType="NVarChar(256)")]
		public string PhotoName
		{
			get
			{
				return this._PhotoName;
			}
			set
			{
				if ((this._PhotoName != value))
				{
					this.OnPhotoNameChanging(value);
					this.SendPropertyChanging();
					this._PhotoName = value;
					this.SendPropertyChanged("PhotoName");
					this.OnPhotoNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this.OnSortOrderChanging(value);
					this.SendPropertyChanging();
					this._SortOrder = value;
					this.SendPropertyChanged("SortOrder");
					this.OnSortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="NVarChar(256)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this.OnUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._UpdateDate = value;
					this.SendPropertyChanged("UpdateDate");
					this.OnUpdateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="NVarChar(256)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlbumPhoto_info")]
	public partial class AlbumPhoto_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _PhotoID;
		
		private string _camera_model;
		
		private string _f_stop;
		
		private string _exposure_time;
		
		private string _iso_speed;
		
		private string _exposure_bias;
		
		private string _focal_length;
		
		private string _max_aperture;
		
		private string _meeting_mode;
		
		private string _subject_distance;
		
		private string _flash_mode;
		
		private string _Author;
		
		private string _aperture;
		
		private string _shutter;
		
		private string _Facebook_photoID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPhotoIDChanging(System.Guid value);
    partial void OnPhotoIDChanged();
    partial void Oncamera_modelChanging(string value);
    partial void Oncamera_modelChanged();
    partial void Onf_stopChanging(string value);
    partial void Onf_stopChanged();
    partial void Onexposure_timeChanging(string value);
    partial void Onexposure_timeChanged();
    partial void Oniso_speedChanging(string value);
    partial void Oniso_speedChanged();
    partial void Onexposure_biasChanging(string value);
    partial void Onexposure_biasChanged();
    partial void Onfocal_lengthChanging(string value);
    partial void Onfocal_lengthChanged();
    partial void Onmax_apertureChanging(string value);
    partial void Onmax_apertureChanged();
    partial void Onmeeting_modeChanging(string value);
    partial void Onmeeting_modeChanged();
    partial void Onsubject_distanceChanging(string value);
    partial void Onsubject_distanceChanged();
    partial void Onflash_modeChanging(string value);
    partial void Onflash_modeChanged();
    partial void OnAuthorChanging(string value);
    partial void OnAuthorChanged();
    partial void OnapertureChanging(string value);
    partial void OnapertureChanged();
    partial void OnshutterChanging(string value);
    partial void OnshutterChanged();
    partial void OnFacebook_photoIDChanging(string value);
    partial void OnFacebook_photoIDChanged();
    #endregion
		
		public AlbumPhoto_info()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid PhotoID
		{
			get
			{
				return this._PhotoID;
			}
			set
			{
				if ((this._PhotoID != value))
				{
					this.OnPhotoIDChanging(value);
					this.SendPropertyChanging();
					this._PhotoID = value;
					this.SendPropertyChanged("PhotoID");
					this.OnPhotoIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_camera_model", DbType="NVarChar(100)")]
		public string camera_model
		{
			get
			{
				return this._camera_model;
			}
			set
			{
				if ((this._camera_model != value))
				{
					this.Oncamera_modelChanging(value);
					this.SendPropertyChanging();
					this._camera_model = value;
					this.SendPropertyChanged("camera_model");
					this.Oncamera_modelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_stop", DbType="NVarChar(50)")]
		public string f_stop
		{
			get
			{
				return this._f_stop;
			}
			set
			{
				if ((this._f_stop != value))
				{
					this.Onf_stopChanging(value);
					this.SendPropertyChanging();
					this._f_stop = value;
					this.SendPropertyChanged("f_stop");
					this.Onf_stopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exposure_time", DbType="NVarChar(50)")]
		public string exposure_time
		{
			get
			{
				return this._exposure_time;
			}
			set
			{
				if ((this._exposure_time != value))
				{
					this.Onexposure_timeChanging(value);
					this.SendPropertyChanging();
					this._exposure_time = value;
					this.SendPropertyChanged("exposure_time");
					this.Onexposure_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iso_speed", DbType="NVarChar(50)")]
		public string iso_speed
		{
			get
			{
				return this._iso_speed;
			}
			set
			{
				if ((this._iso_speed != value))
				{
					this.Oniso_speedChanging(value);
					this.SendPropertyChanging();
					this._iso_speed = value;
					this.SendPropertyChanged("iso_speed");
					this.Oniso_speedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exposure_bias", DbType="NVarChar(50)")]
		public string exposure_bias
		{
			get
			{
				return this._exposure_bias;
			}
			set
			{
				if ((this._exposure_bias != value))
				{
					this.Onexposure_biasChanging(value);
					this.SendPropertyChanging();
					this._exposure_bias = value;
					this.SendPropertyChanged("exposure_bias");
					this.Onexposure_biasChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focal_length", DbType="NVarChar(50)")]
		public string focal_length
		{
			get
			{
				return this._focal_length;
			}
			set
			{
				if ((this._focal_length != value))
				{
					this.Onfocal_lengthChanging(value);
					this.SendPropertyChanging();
					this._focal_length = value;
					this.SendPropertyChanged("focal_length");
					this.Onfocal_lengthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_aperture", DbType="NVarChar(50)")]
		public string max_aperture
		{
			get
			{
				return this._max_aperture;
			}
			set
			{
				if ((this._max_aperture != value))
				{
					this.Onmax_apertureChanging(value);
					this.SendPropertyChanging();
					this._max_aperture = value;
					this.SendPropertyChanged("max_aperture");
					this.Onmax_apertureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meeting_mode", DbType="NVarChar(50)")]
		public string meeting_mode
		{
			get
			{
				return this._meeting_mode;
			}
			set
			{
				if ((this._meeting_mode != value))
				{
					this.Onmeeting_modeChanging(value);
					this.SendPropertyChanging();
					this._meeting_mode = value;
					this.SendPropertyChanged("meeting_mode");
					this.Onmeeting_modeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_distance", DbType="NVarChar(50)")]
		public string subject_distance
		{
			get
			{
				return this._subject_distance;
			}
			set
			{
				if ((this._subject_distance != value))
				{
					this.Onsubject_distanceChanging(value);
					this.SendPropertyChanging();
					this._subject_distance = value;
					this.SendPropertyChanged("subject_distance");
					this.Onsubject_distanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flash_mode", DbType="NVarChar(50)")]
		public string flash_mode
		{
			get
			{
				return this._flash_mode;
			}
			set
			{
				if ((this._flash_mode != value))
				{
					this.Onflash_modeChanging(value);
					this.SendPropertyChanging();
					this._flash_mode = value;
					this.SendPropertyChanged("flash_mode");
					this.Onflash_modeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(100)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this.OnAuthorChanging(value);
					this.SendPropertyChanging();
					this._Author = value;
					this.SendPropertyChanged("Author");
					this.OnAuthorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aperture", DbType="NVarChar(50)")]
		public string aperture
		{
			get
			{
				return this._aperture;
			}
			set
			{
				if ((this._aperture != value))
				{
					this.OnapertureChanging(value);
					this.SendPropertyChanging();
					this._aperture = value;
					this.SendPropertyChanged("aperture");
					this.OnapertureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shutter", DbType="NVarChar(50)")]
		public string shutter
		{
			get
			{
				return this._shutter;
			}
			set
			{
				if ((this._shutter != value))
				{
					this.OnshutterChanging(value);
					this.SendPropertyChanging();
					this._shutter = value;
					this.SendPropertyChanged("shutter");
					this.OnshutterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Facebook_photoID", DbType="NVarChar(100)")]
		public string Facebook_photoID
		{
			get
			{
				return this._Facebook_photoID;
			}
			set
			{
				if ((this._Facebook_photoID != value))
				{
					this.OnFacebook_photoIDChanging(value);
					this.SendPropertyChanging();
					this._Facebook_photoID = value;
					this.SendPropertyChanged("Facebook_photoID");
					this.OnFacebook_photoIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AlbumCategory")]
	public partial class AlbumCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CategoryID;
		
		private System.Guid _AlbumID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategoryIDChanging(int value);
    partial void OnCategoryIDChanged();
    partial void OnAlbumIDChanging(System.Guid value);
    partial void OnAlbumIDChanged();
    #endregion
		
		public AlbumCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CategoryID", DbType="Int NOT NULL")]
		public int CategoryID
		{
			get
			{
				return this._CategoryID;
			}
			set
			{
				if ((this._CategoryID != value))
				{
					this.OnCategoryIDChanging(value);
					this.SendPropertyChanging();
					this._CategoryID = value;
					this.SendPropertyChanged("CategoryID");
					this.OnCategoryIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.old_album_photo_record")]
	public partial class old_album_photo_record : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _main_categoryName;
		
		private string _Cate_FolderName;
		
		private string _sub_CategoryName;
		
		private string _Sub_FolderName;
		
		private string _album_name;
		
		private string _Album_FolderName;
		
		private int _AlbumID;
		
		private string _FileNo;
		
		private string _fileName;
		
		private string _FileCam;
		
		private string _PhotoW;
		
		private string _PhotoH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void Onmain_categoryNameChanging(string value);
    partial void Onmain_categoryNameChanged();
    partial void OnCate_FolderNameChanging(string value);
    partial void OnCate_FolderNameChanged();
    partial void Onsub_CategoryNameChanging(string value);
    partial void Onsub_CategoryNameChanged();
    partial void OnSub_FolderNameChanging(string value);
    partial void OnSub_FolderNameChanged();
    partial void Onalbum_nameChanging(string value);
    partial void Onalbum_nameChanged();
    partial void OnAlbum_FolderNameChanging(string value);
    partial void OnAlbum_FolderNameChanged();
    partial void OnAlbumIDChanging(int value);
    partial void OnAlbumIDChanged();
    partial void OnFileNoChanging(string value);
    partial void OnFileNoChanged();
    partial void OnfileNameChanging(string value);
    partial void OnfileNameChanged();
    partial void OnFileCamChanging(string value);
    partial void OnFileCamChanged();
    partial void OnPhotoWChanging(string value);
    partial void OnPhotoWChanged();
    partial void OnPhotoHChanging(string value);
    partial void OnPhotoHChanged();
    #endregion
		
		public old_album_photo_record()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_main_categoryName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string main_categoryName
		{
			get
			{
				return this._main_categoryName;
			}
			set
			{
				if ((this._main_categoryName != value))
				{
					this.Onmain_categoryNameChanging(value);
					this.SendPropertyChanging();
					this._main_categoryName = value;
					this.SendPropertyChanged("main_categoryName");
					this.Onmain_categoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cate_FolderName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Cate_FolderName
		{
			get
			{
				return this._Cate_FolderName;
			}
			set
			{
				if ((this._Cate_FolderName != value))
				{
					this.OnCate_FolderNameChanging(value);
					this.SendPropertyChanging();
					this._Cate_FolderName = value;
					this.SendPropertyChanged("Cate_FolderName");
					this.OnCate_FolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sub_CategoryName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string sub_CategoryName
		{
			get
			{
				return this._sub_CategoryName;
			}
			set
			{
				if ((this._sub_CategoryName != value))
				{
					this.Onsub_CategoryNameChanging(value);
					this.SendPropertyChanging();
					this._sub_CategoryName = value;
					this.SendPropertyChanged("sub_CategoryName");
					this.Onsub_CategoryNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sub_FolderName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Sub_FolderName
		{
			get
			{
				return this._Sub_FolderName;
			}
			set
			{
				if ((this._Sub_FolderName != value))
				{
					this.OnSub_FolderNameChanging(value);
					this.SendPropertyChanging();
					this._Sub_FolderName = value;
					this.SendPropertyChanged("Sub_FolderName");
					this.OnSub_FolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_album_name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string album_name
		{
			get
			{
				return this._album_name;
			}
			set
			{
				if ((this._album_name != value))
				{
					this.Onalbum_nameChanging(value);
					this.SendPropertyChanging();
					this._album_name = value;
					this.SendPropertyChanged("album_name");
					this.Onalbum_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Album_FolderName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string Album_FolderName
		{
			get
			{
				return this._Album_FolderName;
			}
			set
			{
				if ((this._Album_FolderName != value))
				{
					this.OnAlbum_FolderNameChanging(value);
					this.SendPropertyChanging();
					this._Album_FolderName = value;
					this.SendPropertyChanged("Album_FolderName");
					this.OnAlbum_FolderNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="Int NOT NULL")]
		public int AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this.OnAlbumIDChanging(value);
					this.SendPropertyChanging();
					this._AlbumID = value;
					this.SendPropertyChanged("AlbumID");
					this.OnAlbumIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileNo", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string FileNo
		{
			get
			{
				return this._FileNo;
			}
			set
			{
				if ((this._FileNo != value))
				{
					this.OnFileNoChanging(value);
					this.SendPropertyChanging();
					this._FileNo = value;
					this.SendPropertyChanged("FileNo");
					this.OnFileNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fileName", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string fileName
		{
			get
			{
				return this._fileName;
			}
			set
			{
				if ((this._fileName != value))
				{
					this.OnfileNameChanging(value);
					this.SendPropertyChanging();
					this._fileName = value;
					this.SendPropertyChanged("fileName");
					this.OnfileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileCam", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string FileCam
		{
			get
			{
				return this._FileCam;
			}
			set
			{
				if ((this._FileCam != value))
				{
					this.OnFileCamChanging(value);
					this.SendPropertyChanging();
					this._FileCam = value;
					this.SendPropertyChanged("FileCam");
					this.OnFileCamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoW", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string PhotoW
		{
			get
			{
				return this._PhotoW;
			}
			set
			{
				if ((this._PhotoW != value))
				{
					this.OnPhotoWChanging(value);
					this.SendPropertyChanging();
					this._PhotoW = value;
					this.SendPropertyChanged("PhotoW");
					this.OnPhotoWChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoH", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string PhotoH
		{
			get
			{
				return this._PhotoH;
			}
			set
			{
				if ((this._PhotoH != value))
				{
					this.OnPhotoHChanging(value);
					this.SendPropertyChanging();
					this._PhotoH = value;
					this.SendPropertyChanged("PhotoH");
					this.OnPhotoHChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.view_AlbumPhotoInfo")]
	public partial class view_AlbumPhotoInfo
	{
		
		private System.Guid _PhotoID;
		
		private System.Nullable<System.Guid> _AlbumID;
		
		private string _PhotoName;
		
		private System.Nullable<int> _SortOrder;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<System.DateTime> _UpdateDate;
		
		private string _camera_model;
		
		private string _f_stop;
		
		private string _exposure_time;
		
		private string _iso_speed;
		
		private string _exposure_bias;
		
		private string _focal_length;
		
		private string _max_aperture;
		
		private string _meeting_mode;
		
		private string _subject_distance;
		
		private string _flash_mode;
		
		private string _Author;
		
		private System.Nullable<bool> _Enabled;
		
		private string _AlbumName;
		
		private string _Lang;
		
		private string _shutter;
		
		private string _aperture;
		
		public view_AlbumPhotoInfo()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid PhotoID
		{
			get
			{
				return this._PhotoID;
			}
			set
			{
				if ((this._PhotoID != value))
				{
					this._PhotoID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumID", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> AlbumID
		{
			get
			{
				return this._AlbumID;
			}
			set
			{
				if ((this._AlbumID != value))
				{
					this._AlbumID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhotoName", DbType="NVarChar(256)")]
		public string PhotoName
		{
			get
			{
				return this._PhotoName;
			}
			set
			{
				if ((this._PhotoName != value))
				{
					this._PhotoName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SortOrder", DbType="Int")]
		public System.Nullable<int> SortOrder
		{
			get
			{
				return this._SortOrder;
			}
			set
			{
				if ((this._SortOrder != value))
				{
					this._SortOrder = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this._CreateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDate
		{
			get
			{
				return this._UpdateDate;
			}
			set
			{
				if ((this._UpdateDate != value))
				{
					this._UpdateDate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_camera_model", DbType="NVarChar(100)")]
		public string camera_model
		{
			get
			{
				return this._camera_model;
			}
			set
			{
				if ((this._camera_model != value))
				{
					this._camera_model = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_f_stop", DbType="NVarChar(50)")]
		public string f_stop
		{
			get
			{
				return this._f_stop;
			}
			set
			{
				if ((this._f_stop != value))
				{
					this._f_stop = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exposure_time", DbType="NVarChar(50)")]
		public string exposure_time
		{
			get
			{
				return this._exposure_time;
			}
			set
			{
				if ((this._exposure_time != value))
				{
					this._exposure_time = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iso_speed", DbType="NVarChar(50)")]
		public string iso_speed
		{
			get
			{
				return this._iso_speed;
			}
			set
			{
				if ((this._iso_speed != value))
				{
					this._iso_speed = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_exposure_bias", DbType="NVarChar(50)")]
		public string exposure_bias
		{
			get
			{
				return this._exposure_bias;
			}
			set
			{
				if ((this._exposure_bias != value))
				{
					this._exposure_bias = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focal_length", DbType="NVarChar(50)")]
		public string focal_length
		{
			get
			{
				return this._focal_length;
			}
			set
			{
				if ((this._focal_length != value))
				{
					this._focal_length = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_max_aperture", DbType="NVarChar(50)")]
		public string max_aperture
		{
			get
			{
				return this._max_aperture;
			}
			set
			{
				if ((this._max_aperture != value))
				{
					this._max_aperture = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_meeting_mode", DbType="NVarChar(50)")]
		public string meeting_mode
		{
			get
			{
				return this._meeting_mode;
			}
			set
			{
				if ((this._meeting_mode != value))
				{
					this._meeting_mode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject_distance", DbType="NVarChar(50)")]
		public string subject_distance
		{
			get
			{
				return this._subject_distance;
			}
			set
			{
				if ((this._subject_distance != value))
				{
					this._subject_distance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_flash_mode", DbType="NVarChar(50)")]
		public string flash_mode
		{
			get
			{
				return this._flash_mode;
			}
			set
			{
				if ((this._flash_mode != value))
				{
					this._flash_mode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Author", DbType="NVarChar(100)")]
		public string Author
		{
			get
			{
				return this._Author;
			}
			set
			{
				if ((this._Author != value))
				{
					this._Author = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Enabled", DbType="Bit")]
		public System.Nullable<bool> Enabled
		{
			get
			{
				return this._Enabled;
			}
			set
			{
				if ((this._Enabled != value))
				{
					this._Enabled = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AlbumName", DbType="NVarChar(256)")]
		public string AlbumName
		{
			get
			{
				return this._AlbumName;
			}
			set
			{
				if ((this._AlbumName != value))
				{
					this._AlbumName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lang", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Lang
		{
			get
			{
				return this._Lang;
			}
			set
			{
				if ((this._Lang != value))
				{
					this._Lang = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shutter", DbType="NVarChar(50)")]
		public string shutter
		{
			get
			{
				return this._shutter;
			}
			set
			{
				if ((this._shutter != value))
				{
					this._shutter = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aperture", DbType="NVarChar(50)")]
		public string aperture
		{
			get
			{
				return this._aperture;
			}
			set
			{
				if ((this._aperture != value))
				{
					this._aperture = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
